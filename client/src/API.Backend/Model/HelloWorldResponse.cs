/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = API.Backend.Client.OpenAPIDateConverter;

namespace API.Backend.Model
{
    /// <summary>
    /// HelloWorldResponse
    /// </summary>
    [DataContract(Name = "HelloWorldResponse")]
    public partial class HelloWorldResponse
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HelloWorldResponse" /> class.
        /// </summary>
        /// <param name="message1">message1.</param>
        /// <param name="message2">message2.</param>
        /// <param name="message3">message3.</param>
        /// <param name="message4">message4.</param>
        public HelloWorldResponse(DateTime message1 = default(DateTime), DateTime message2 = default(DateTime), DateTime message3 = default(DateTime), DateTime message4 = default(DateTime))
        {
            this.Message1 = message1;
            this.Message2 = message2;
            this.Message3 = message3;
            this.Message4 = message4;
        }

        /// <summary>
        /// Gets or Sets Message1
        /// </summary>
        [DataMember(Name = "message1", EmitDefaultValue = false)]
        public DateTime Message1 { get; set; }

        /// <summary>
        /// Gets or Sets Message2
        /// </summary>
        [DataMember(Name = "message2", EmitDefaultValue = false)]
        public DateTime Message2 { get; set; }

        /// <summary>
        /// Gets or Sets Message3
        /// </summary>
        [DataMember(Name = "message3", EmitDefaultValue = false)]
        public DateTime Message3 { get; set; }

        /// <summary>
        /// Gets or Sets Message4
        /// </summary>
        [DataMember(Name = "message4", EmitDefaultValue = false)]
        public DateTime Message4 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HelloWorldResponse {\n");
            sb.Append("  Message1: ").Append(Message1).Append("\n");
            sb.Append("  Message2: ").Append(Message2).Append("\n");
            sb.Append("  Message3: ").Append(Message3).Append("\n");
            sb.Append("  Message4: ").Append(Message4).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
